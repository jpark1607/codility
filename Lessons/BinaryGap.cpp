/* Lesson 1.1
 * 1. 문제:
 *   1로 둘러싸인 최대 길이의 0의 개수를 구하라.
 *
 * 2. 아이디어:
 *   특별할 것 없다. 코드의 내용이 그냥 아이디어이다.
 *
 * 3. 코드:
 *   [A] 1이 나오는 가장 작은 자리를 찾는다.
 *   [B] N이 0이 될 때까지 2로 나누는 것을 반복한다.
 *     [B-1] N이 짝수일 경우 0이 연속된 것이므로 cnt를 올려준다.
 *     [B-2] N이 홀수일 경우 1이 나온 것이므로 지금까지의 누적된 cnt와 max를 비교하고, cnt를 0으로 초기화 해 준다.
 * */
int
solution(int N)
{
    int max = 0, cnt = 0;

    /* [A] */
    while (N % 2 == 0) {
        N = N / 2;
    }

    if (N == 1)
        return 0;

    /* [B] */
    while (N > 0) {
        /* [B-1] */
        if (N % 2 == 0) {
            cnt++;
        }
        /* [B-2] */
        else {
            if (cnt > max)
                max = cnt;
            cnt = 0;
        }
        N = N / 2;
    }

    return max;
}